@model MovieStoreMVC.Models.Movie
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
<!-- Das Formular wird in die POST-Methode Create in MovieStore Controller übergeben -->
<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>


    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <input asp-for="Description" class="form-control" />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Price" class="control-label"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Genre" class="control-label"></label>
        <select asp-for="Genre" class="form-control" asp-items="Html.GetEnumSelectList<MovieStoreMVC.Models.Movie.GenreTyp>()">
        </select>
        <span asp-validation-for="Genre" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" /> <!-- bei klick auf submit-button wird die Create - Post- Methode aufgerufen und Formular übertragen-->
    </div>
</form>

<!-- Clientseitige Validierung ist aktiviert -->
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


@*<form id="culture-switcher">
    <select name="culture" id="culture-options">
        <option></option>
        @foreach (var culture in Model.SupportedCultures)
        {
            <option value="@culture.Name" selected="@(Model.CurrentUICulture.Name == culture.Name)">@culture.DisplayName</option>
        }
    </select>
</form>*@